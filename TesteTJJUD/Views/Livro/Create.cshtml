@model TesteTJJUD.Models.Livro

@{ ViewBag.Title = "Cadastro";}

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@using (Html.BeginForm())
{
    <script>
        function onlyDecimal(e) {
            var char = String.fromCharCode(e.keyCode || e.which);
            if (!/[0-9,]/.test(char)) {
                return false;
            }
        }</script>
    <div>
        <label>Título</label>
        @Html.TextBoxFor(model => model.Titulo, new { @class = "form-control", @maxlength = "40" })
    </div>
    <div>
        <label>Editora</label>
        @Html.TextBoxFor(model => model.Editora, new { @class = "form-control", @maxlength = "40" })
    </div>
    <div>
        <label>Edição</label>
        @Html.TextBoxFor(model => model.Edicao, new { @class = "form-control", type = "number" })
    </div>
    <div>
        <label>Ano de Publicação</label>
        @Html.TextBoxFor(model => model.AnoPublicacao, new { @class = "form-control", @maxlength = "4", type = "number" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "form-label" })
        @*@Html.TextBoxFor(model => model.Valor, new { @class = "form-control", @maxlength = "10" })*@
        @Html.EditorFor(model => model.Valor, "{0:C}", new
{
    htmlAttributes = new
    {
        @class = "form-control",
        @maxlength = "10",
onkeypress = "return onlyDecimal(event)",
oninput = "this.value = this.value.replace(/[^0-9,]/g, '')"
,
}
})
    </div>

    <div>
        <label>Autores</label>
        @foreach (var autor in ViewBag.Autores)
        {
            <div>
                <input type="checkbox" name="autoresSelecionados" value="@autor.CodAu" /> @autor.Nome
            </div>
        }
    </div>

    <div>
        <label>Assuntos</label>
        @foreach (var assunto in ViewBag.Assuntos)
        {
            <div>
                <input type="checkbox" name="assuntosSelecionados" value="@assunto.CodAs" /> @assunto.Descricao
            </div>
        }
    </div>

    if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var modelState in ViewData.ModelState.Values)
                {
                    foreach (var error in modelState.Errors)
                    {
                        <li>@error.ErrorMessage</li>
                    }
                }
            </ul>
        </div>
    }


    <button type="submit" class="btn btn-primary">Salvar</button>


}

